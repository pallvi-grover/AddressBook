@using AddressBook.Models
@{
    ViewBag.Title = "Login";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<h2 class="page-name">Login </h2>

<div id="loginDiv" style="width:50%">
    <div class="form-group">
        <label for="txtEmail">Email ID </label>
        <input type='email' name="email" id="loginEmail" class="form-control" placeholder="example@xyz.com">
    </div>
    <div class="form-group">
        <label>Password</label>
        <input type="password" id="loginPwd" class="form-control">
    </div>
    <div>
        <label id="msg" class="text-danger"></label>
    </div>

    <button id="btnLogin" class="btn btn-default">Submit</button>
    <button id="btnCancel" class="btn btn-default">Cancel</button>
</div>

@Html.ActionLink("Register", "Register", null, new { @class = "label" })
<script>
        @{
        ReferenceVariable test = new ReferenceVariable();
    }
    $(document).ready(function () {
        $("#btnLogin").on('click', function () {
            $.ajax(
                {
                    url: "/TOKEN",
                    type: "POST",
                    data: $.param({ grant_type: 'password', username: $("#loginEmail").val(), password: $("#loginPwd").val() }),
                    headers: { 'Content-Type': '@test.contentTypeHeader' },
                    success: function (resp) {
                        sessionStorage.setItem('userName', resp.userName);
                        sessionStorage.setItem('accessToken', resp.access_token);
                        var authHeaders = {};
                        authHeaders.Authorization = 'Bearer ' + resp.access_token;
                        $.ajax({
                            url: "@test.loginURLTokenCheck",
                            type: "GET",
                            headers: authHeaders,
                            success: function (response) {
                                alert("Welcome "+$("#loginEmail").val());
                                window.location.href = '@test.redirectToIndexPage' + $("#loginEmail").val();
                            }
                        });

                    },
                    error: function (request, message, error) {
                        var response = null;
                        if (request.status == 400) {
                            try {
                                response = JSON.parse(request.responseText);
                            }
                            catch (e) {
                                $("#msg").html("Invalid Response from the server.");
                            }
                        }
                            $("#msg").html(response.error_description.toString());

                    }
                })
        });
        $("#btnCancel").on('click', function () {
            $("#loginEmail").val("");
            $("#loginPwd").val("");
        });
    })
</script>