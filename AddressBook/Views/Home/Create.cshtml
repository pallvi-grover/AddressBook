@model AddressBook.Models.ContactsInfo

<!DOCTYPE html>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using (Html.BeginForm("Index", "Home"))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="page-name">Create New Contact</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("NickName ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nickName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nickName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Email ID", htmlAttributes: new { @class = "control-label col-md-2", placeholder = "example@xyz.com" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.emailID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emailID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("DOB ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control", placeholder = "MM/dd/yyyy" } })
                @Html.LabelFor(model => model.dob, "", new { @class = "text-danger", @id = "errormsg" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Address ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            @Html.Partial("_PhoneNumbers", new ViewDataDictionary())
        </div>

        <label id="error" class = "text-danger"></label>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="create" class="btn btn-default">Create</button>
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>

    </div>
    }

    <script>
        $(document).ready(function () {
            $("#create").on('click', function () {   
                var jsonObj=[],type = [],number = [];
                $("tr > td > input#Type_").each(function (index, value) {
                    type.push($(value).val().trim());
                });
                $("tr > td > input#Number_").each(function (index, value) {
                    number.push($(value).val().trim());
                });
                $.each(type, function (index, value) {
                    item = {};
                    item["type"] = type[index];
                    item["Number"] = number[index];
                    jsonObj.push(item);

                });
                var data = {
                    "fullName": $("#fullName").val().trim(),
                    "nickName": $("#nickName").val().trim(),
                    "emailID": $("#emailID").val().trim(),
                    "dob": $("#dob").val().trim(),
                    "address": $("#address").val().trim(),
                    "phoneNumbers": jsonObj
                };
        $.ajax({
            url: "/api/Contacts/",
            method: "POST",
            data: data,
            async: false,
            success: function (data) {
               
            },
            //error: function (xhr, ajaxOptions, thrownError) {
            //    if (xhr.status == 404) {
            //        alert(thrownError);
            //        alert("Error occured");
            //        $('#someText').text('Cannot find this record');
            //    }
            //}
            error: function (request, message, error) {
                if (request.responseJSON != null) {
                    $('#error').text(request.responseJSON.Message);
                }

            }
        });
            })
        })
    </script>
</body>
</html>
