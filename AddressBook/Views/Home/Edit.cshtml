@model AddressBook.Models.ContactsInfo

@{
    ViewBag.Title = "Edit";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<style>
    #PhoneNumberDetails, #EditPhoneNumberDetails, #HideButton {
        display: none;
    }

    .equal {
        float: left;
        width: 50%;
        margin-left: auto;
        margin-right: auto;
        display: block;
        /*position:relative;*/
    }

    /*    #imageDiv {
        padding: 130px;
        max-height: 400px;
    }*/
</style>
@using (Html.BeginForm("Create", "Home", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal equal">
        <h2 class="page-name">Edit the Contacts Information</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
      @Html.Hidden("UserId", TempData["UserID"].ToString())
    @Html.Hidden("UserEmailId")
        <div class="form-group">
            @Html.Label("Name", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
            </div>

        </div>
    

    <div class="form-group">
        @Html.Label("NickName ", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nickName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nickName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Email ID", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.emailID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.emailID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("DOB ", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.dob, "{0:yyyy-MM-dd}", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @Html.Label("Address ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            
        </div>
    </div>
    <div id="AddPhoneNumberDetails">
        @Html.Partial("_PhoneNumbers", new ViewDataDictionary())
    </div>
    <div id="PhoneNumberDetails">
        @if (Model.phoneNumbers != null)
        {
            @Html.Partial("_ViewPhoneNumber", Model.phoneNumbers)
        }
        else
        {
            @Html.Partial("_ViewPhoneNumber", new ViewDataDictionary())
        }
    </div>
    <div id="EditPhoneNumberDetails">
        @Html.Partial("_EditPhoneNumber", Model)
    </div>
</div>
    <div class="equal">
        <div class="form-group img-responsive image-container">
            <img id="user_img" alt="@Model.fullName" src="@Url.Content(Model.imageURL)" height="230px" width="200px" style="border:solid" />
            <input type="file" title="Upload Image" id="file" name="file" onchange="show(this)" />
        </div>
    </div>
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="create" class="btn btn-default">Save</button>
                @Html.Label("View Phone Number", new { @class = "btn btn-default common", onclick = "showPhoneNumberDetails(true,this)", @id = "ViewButton" })
                @Html.Label("Hide Phone Number", new { @class = "btn btn-default common", onclick = "showPhoneNumberDetails(true,this)", @id = "HideButton" })
                @*@Html.Label("Add Phone Number", new { @class = "btn btn-default", onclick = "addPhoneNumber()" })*@
                @Html.Label("Edit Phone Number", new { @class = "btn btn-default common", onclick = "showPhoneNumberDetails(false,this)" })
                @Html.ActionLink("Cancel", null, null, new { @class = "btn btn-default", @id = "Cancel" })

            </div>
        </div>
    </div>
}
<script>
    //$(document).ready(function () {
    //    $("#addBtn").click(function () {
    //        alert("The paragraph was clicked.");
    //        $('.common').attr('disabled', 'disabled');
    //        //$('#ViewButton').css("pointer-events", "none");
    //    });
    //});
    //$(document).ready(function () {
    //    $(".common").click(function () {
    //        alert("The paragraph was clicked.");
    //        $('#newNumber').css("pointer-events", "none");
    //    });
    //});
    //$(document).ready(function () {
    //    $(".common").click(function () {
    //        alert("The paragraph was clicked.");
    //        $('#newNumber').css("pointer-events", "none");
    //    });
    //});
    function showPhoneNumberDetails(hideorshow, el) {
        if (hideorshow) {
            $('#PhoneNumberDetails input').attr('readonly', 'readonly');
            if (el.textContent == 'View Phone Number') {
                $("#PhoneNumberDetails").css("display", "block");
                $('#HideButton').css("display", "inline");
                $('#ViewButton').css("display", "none");
                $('#addBtn').attr('disabled', 'disabled');
            }
            else {
                $("#PhoneNumberDetails").css("display", "none");
                $("#EditPhoneNumberDetails").css("display", "none");
                $('#HideButton').css("display", "none");
                $('#ViewButton').css("display", "inline");
                $('#addBtn').removeAttr('disabled');
            }
        }
        else {
            $("#EditPhoneNumberDetails").css("display", "block");
            $("#PhoneNumberDetails").css("display", "none");
            $('#PhoneNumberDetails input').removeAttr("readonly");
            $('#HideButton').css("display", "inline");
            $('#ViewButton').css("display", "none");
            $('#addBtn').attr('disabled', 'disabled');
        }
    }

    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }


    $(document).ready(function () {
        $.ajax({
                url: '/Home/getEmailId',
                data: { userId: $("#UserId").val().trim() }
            }).done(function (data) {
                $("#UserEmailId").val(data);
            });
            $("#Cancel").click(function(event){
       event.preventDefault();
                window.location.href = "@Url.Action("Index", "Home")" + "?email=" + $("#UserEmailId").val();
    });
        $("#create").on('click', function () {
            var jsonObj = [], type = [], number = [], id = [];
            $("tr > td > input#item_type").each(function (index, value) {
                type.push($(value).val().trim());
            });
            $("tr > td > input#item_Number").each(function (index, value) {
                number.push($(value).val().trim());
            });
            $("tr > td > input#item_ID").each(function (index, value) {
                id.push($(value).val().trim());
            });
            $.each(type, function (index, value) {
                item = {};
                item["ID"] = id[index];
                item["type"] = type[index];
                item["Number"] = number[index];
                item["contactId"] = $('#ID').val().trim();
                jsonObj.push(item);

            });
            //if ($("#file").val().trim() != "")
            //    var length = $("#file").val().trim().split("\\").length - 1;

            //var data = {
            //    "fullName": $("#fullName").val().trim(),
            //    "nickName": $("#nickName").val().trim(),
            //    "emailID": $("#emailID").val().trim(),
            //    "dob": $("#dob").val().trim(),
            //    "address": $("#address").val().trim(),
            //    "ImageURL": $("#file").val().trim() == "" ? "~/ContactImages/defaultImage.JPG" : "~/ContactImages/" + $("#file").val().trim().split("\\")[length],
            //    "phoneNumbers": jsonObj
            //};

            //alert(JSON.stringify(jsonObj[0].ID));

            jsonObj.forEach(putApi);

            function putApi(item, index) {
                var contactID = jsonObj[index].contactId;
                var phoneId = jsonObj[index].ID;
                $.ajax({
                    url: "/api/Contacts/" + contactID + "?pid=" + phoneId,
                    method: "PUT",
                    data: item,
                    async: false,
                    success: function (data) {
                        //alert(item);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (xhr.status == 404) {
                            alert(thrownError);
                            alert("Error occured");
                            $('#someText').text('Cannot find this record');
                        }
                    }
                });
            }

            var jsonObj = [], type = [], number = [];
            $("tr > td > input#Type_").each(function (index, value) {
                type.push($(value).val().trim());
            });
            $("tr > td > input#Number_").each(function (index, value) {
                number.push($(value).val().trim());
            });
            //$("tr > td > input#item_ID").each(function (index, value) {
            //    id.push($(value).val().trim());
            //});
            $.each(type, function (index, value) {
                item = {};
                //item["ID"] = id[index];
                item["type"] = type[index];
                item["Number"] = number[index];
                item["contactId"] = $('#ID').val().trim();
                jsonObj.push(item);
            });
            jsonObj.forEach(postAPI);
            function postAPI(item, index) {
                var contactID = jsonObj[index].contactId;

                $.ajax({
                    url: "/api/Contacts/" + contactID,
                    method: "POST",
                    data: item,
                    async: false,
                    success: function (data) {

                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        if (xhr.status == 404) {
                            alert(thrownError);
                            alert("Error occured");
                            $('#someText').text('Cannot find this record');
                        }
                    }
                });
            }
            if ($("#file").val().trim() != "")
                var length = $("#file").val().trim().split("\\").length - 1;
            var data = {
                "ID": $('#ID').val().trim(),
                "fullName": $("#fullName").val().trim(),
                "nickName": $("#nickName").val().trim(),
                "emailID": $("#emailID").val().trim(),
                "dob": $("#dob").val().trim(),
                "address": $("#address").val().trim(),
                "ImageURL": $("#file").val().trim() == "" ? "~/ContactImages/defaultImage.JPG" : "~/ContactImages/" + $("#file").val().trim().split("\\")[length],
            };
            var contactID = $('#ID').val().trim();
            $.ajax({
                url: "/api/Contacts/" + contactID,
                method: "PUT",
                data: data,
                async: false,
                success: function (data) {
                    alert("Saved Successfully.");
                    window.location.href = '/Home/Index';
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.status == 404) {
                        alert(thrownError);
                        alert("Error occured");
                        $('#someText').text('Cannot find this record');
                    }
                }
            });

        })
    })
</script>
