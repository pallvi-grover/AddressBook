@model AddressBook.Models.ContactsInfo

@{
    ViewBag.Title = "Edit";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<style>
    #PhoneNumberDetails, #EditPhoneNumberDetails, #HideButton {
        display: none;
    }

    .equal {
        float: left;
        width: 50%;
        margin-left: auto;
        margin-right: auto;
        display: block;
        /*position:relative;*/
    }

/*    #imageDiv {
        padding: 130px;
        max-height: 400px;
    }*/
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal equal">
        <h2 class="page-name">Edit the Contacts Information</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="form-group">
            @Html.Label("Name", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("NickName ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nickName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nickName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Email ID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.emailID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emailID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("DOB ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.dob, "{0:yyyy-MM-dd}", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Address ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="PhoneNumberDetails">
            @if (Model.phoneNumbers != null)
            {
                @Html.Partial("_ViewPhoneNumber", Model.phoneNumbers)
            }
            else
            {
             @Html.Partial("_ViewPhoneNumber", new ViewDataDictionary())
            }
        </div>
        <div id="EditPhoneNumberDetails">
            @Html.Partial("_EditPhoneNumber", Model)
        </div>
    </div>
    <div class="equal">
        <div class="form-group img-responsive image-container">
            <img id="user_img" alt="@Model.fullName" src="@Url.Content(Model.imageURL)" height="250px" width="200px" style="border:solid" />
            <input type="file" title="Upload Image" id="file" name="file" onchange="show(this)" />
        </div>
    </div>
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.Label("View Phone Number", new { @class = "btn btn-default", onclick = "showPhoneNumberDetails(true,this)", @id = "ViewButton" })
                @Html.Label("Hide Phone Number", new { @class = "btn btn-default", onclick = "showPhoneNumberDetails(true,this)", @id = "HideButton" })
                @Html.ActionLink("Add Phone Number", null, null, new { @class = "btn btn-default" })
                @Html.Label("Edit Phone Number", new { @class = "btn btn-default", onclick = "showPhoneNumberDetails(false,this)" })
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })

            </div>
        </div>
    </div>
}
<script>
    function showPhoneNumberDetails(hideorshow, el) {

        if (hideorshow) {
            $('#PhoneNumberDetails input').attr('readonly', 'readonly');
            if (el.textContent == 'View Phone Number') {
                $("#PhoneNumberDetails").css("display", "block");
                $('#HideButton').css("display", "inline");
                $('#ViewButton').css("display", "none");
            }
            else {
                $("#PhoneNumberDetails").css("display", "none");
                $("#EditPhoneNumberDetails").css("display", "none");
                $('#HideButton').css("display", "none");
                $('#ViewButton').css("display", "inline");
            }
        }
        else {
            $("#EditPhoneNumberDetails").css("display", "block");
            $("#PhoneNumberDetails").css("display", "none");
            $('#PhoneNumberDetails input').removeAttr("readonly");
            $('#HideButton').css("display", "inline");
            $('#ViewButton').css("display", "none");
        }
    }
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>
